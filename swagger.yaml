openapi: 3.0.1
info:
  version: "1.0.0"
  title: "iMarts Customer Side API"
  contact:
    email: "babula@imarts.co"

servers:
  - url: 'https://804vp22bk4.execute-api.ap-northeast-1.amazonaws.com'

tags:
- name: "Authroization"
  description: "APIs used for registering and logging in user"
- name: "Coming Soon"
  description: "There API is not implemented yet. Please come back later"


paths:
  /api/google/login:
    post:
      tags:
      - "Authroization"
      summary: "Log in with Google credentials"
      description: "Customers can log in iMarts APP with Google credentials."
      operationId: "googleLogin"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                agent:
                  type: string
                  enum:
                  - android
                  - ios
                  - web
                token:
                  type: string
      responses:
        "406":
          description: "Account does not exist. Please use google register API to create the account."
        "401":
          description: "invalid token"
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "Successfully log in with Google credentials."

  /api/google/register:
    post:
      tags:
      - "Authroization"
      summary: "Register a new account with Google credentials"
      description: "Customers can register a new account with Google credentials."
      operationId: "googleRegister"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                agent:
                  type: string
                  enum:
                  - android
                  - ios
                  - web
                token:
                  type: string
                  description: "ID token or access token from the OAuth service"
                username:
                  type: string
                birthday:
                  type: string
                  description: "YYYY/MM/DD"
                country:
                  type: string
                  description: 'Country code'
                  example: TWN
                region:
                  type: number
                  description: 'Region ID responsed from backend'
                address:
                  type: string
                dial-code:
                  type: string
                  description: 'Country dial code'
                  example: 886
                phone:
                  type: string
      responses:
        "409":
          description: "Customer account with spcified Google ID already exists"
        "401":
          description: "invalid token"
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "Account is created Successfully"
  

  /api/mail/login:
    post:
      tags:
      - "Authroization"
      summary: "Log in with email"
      description: "Customers can log in iMarts APP with email."
      operationId: "mailLogin"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                password:
                  type: string
      responses:
        "406":
          description: "Account does not exist."
        "401":
          description: "wrong credential"
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "Successfully log in with email."

  /api/mail/register:
    post:
      tags:
      - "Authroization"
      summary: "Register a new account with email"
      description: "Customers can register a new account with email."
      operationId: "mailRegister"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                    email:
                      type: string
                    username:
                      type: string
                    password:
                      type: string
                    pin:
                      type: string
                      description: "Verification PIN"
                    birthday:
                      type: string
                      description: "YYYY/MM/DD"
                    country:
                      type: string
                      description: 'Country code'
                      example: TWN
                    region:
                      type: number
                      description: 'Region ID responsed from backend'
                    address:
                      type: string
                    dial_code:
                      type: string
                      description: 'Country dial code.'
                      example: 886
                    phone:
                      type: string
      responses:
        "406":
          description: "Account does not exist."
        "401":
          description: "Unmatched PIN"
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "Account is created Successfully"

  /api/pin/request:
    post:
      tags:
      - "Authroization"
      operationId: 'requestPIN'
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                lang:
                  type: string
                  enum:
                  - zh-tw
                  - en-us
                  - ja
                  - ko
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "PIN is sent via email"
  
  /api/pin/verify:
    post:
      tags:
      - "Authroization"
      operationId: "verifyPIN"
      requestBody:
        content:
          application/json:
            schema:
              properties:
                email:
                  type: string
                pin:
                  type: string
      responses:
        "406":
          description: "account not found"
        "401":
          description: "Unmatched PIN"
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "Email account is verified"

  /api/region/dial-code:
    get:
      tags:
      - "Authroization"
      summary: "Get country dial code list"
      operationId: "dialCode"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/region/subregions:
    get:
      tags:
      - "Authroization"
      summary: "Get subregion list of the specified region"
      operationId: "subregions"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "level"
        in: query
        required: true
        schema:
          type: string
          enum:
            - country
            - level1
            - level2
      - name: "key"
        in: query
        required: true
        schema:
          type: string
        description: "Key of the region. For country, use country code such as JPN, USA. For region of other levels, use id returned by backend."
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/tag/stores:
    get:
      tags:
      - "Tag"
      summary: "Get stores by tag"
      operationId: "tagStores"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "latitude"
        in: query
        required: true
        schema:
          type: number
        example: 23.98
      - name: "longitude"
        in: query
        required: true
        schema:
          type: number
        example: 121.6
      - name: "tag"
        in: query
        required: true
        schema:
          type: string
        example: 113bd8a4-3454-11eb-a5b8-002b673caf83
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/tag/dishes:
    get:
      tags:
      - "Tag"
      summary: "Get dishes by tag"
      operationId: "tagDishes"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "latitude"
        in: query
        required: true
        schema:
          type: number
        example: '23.98'
      - name: "longitude"
        in: query
        required: true
        schema:
         type: number
        example: '121.6'
      - name: "tag"
        in: query
        required: true
        schema:
          type: string
        example: '13be9900-dace-11ea-a41e-58961d'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/store/tags:
    get:
      tags:
      - "Store"
      summary: "Get tags of stores"
      operationId: "StoreTags"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "type"
        in: query
        required: true
        schema:
          type: string
          enum:
            - recommend
            - marketing
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"
  
  /api/store/dish-tags:
    get:
      tags:
      - "Store"
      summary: "Get tags by dishes of a store"
      operationId: "storeDishTags"
      parameters:
      - name: "store"
        in: query
        required: true
        schema:
          type: string
        description: 'store ID. Example: d8953476-f178-11ea-8e2e-58961d'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/store/product-tags:
    get:
      tags:
      - "Store"
      summary: "Get tags by products of a store"
      operationId: "storeProductTags"
      parameters:
      - name: "store"
        in: query
        required: true
        schema:
          type: string
        description: 'store ID. Example: be440457-a698-49a4-8e8c-eff4c0'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/store/info:
    get:
      tags:
      - "Store"
      summary: "Get all store info by id"
      operationId: "storeInfo"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "latitude"
        in: query
        required: true
        schema:
          type: number
        example: '23.98'
      - name: "longitude"
        in: query
        required: true
        schema:
          type: number
        example: '121.6'
      - name: "id"
        in: query
        required: true
        schema:
          type: string
        example: '0003df6a-c5ba-4173-b38b-e34337'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/store/comments:
    get:
      tags:
      - "Store"
      summary: "Get comments by store id"
      operationId: "storeComments"
      parameters:
      - name: "id"
        in: query
        required: true
        schema:
          type: string
        example: 'df903286-f179-11ea-9410-58961d'
      - name: "offset"
        in: query
        required: true
        schema:
          type: number
        description: 'Used for fetching more comments'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/store/latest:
    get:
      tags:
      - "Store"
      summary: "Get latest store list"
      operationId: "latestStore"
      parameters:
        - name: "lang"
          in: query
          required: true
          schema:
            type: string
            enum:
              - en-us
              - zh-tw
              - ja
              - ko
        - name: "latitude"
          in: query
          required: true
          schema:
            type: number
          example: '23.98'
        - name: "longitude"
          in: query
          required: true
          schema:
            type: number
          example: '121.6'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"
  
  /api/store/tagged-dishes:
    get:
      tags:
      - "Store"
      summary: "Get dishes by tag and store"
      operationId: "StoreTaggedDishes"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "tag"
        in: query
        required: true
        schema:
          type: string
        example: 'abf60db8-f698-11ea-9fab-58961d'
      - name: "store"
        in: query
        required: true
        schema:
          type: string
        description: 'store ID. Example: d8953476-f178-11ea-8e2e-58961d'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/store/tagged-products:
    get:
      tags:
      - "Store"
      summary: "Get products by tag and store"
      operationId: "StoreTaggedProducts"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "tag"
        in: query
        required: true
        schema:
          type: string
        example: '05ca5d9d-b4f5-11e9-a805-42010a'
      - name: "store"
        in: query
        required: true
        schema:
          type: string
        description: 'store ID. Example: be440457-a698-49a4-8e8c-eff4c0'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/store/neighbor-stores:
    get:
      tags:
      - "Store"
      summary: "Get neighbor stores"
      operationId: "neighborStores"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "latitude"
        in: query
        required: true
        schema:
          type: number
        example: '23.98'
      - name: "longitude"
        in: query
        required: true
        schema:
          type: number
        example: '121.6'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/dish/info:
    get:
      tags:
      - "Dish"
      summary: "Get dish info by id"
      operationId: "dishInfo"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "id"
        in: query
        required: true
        schema:
          type: string
        example: '0bd11c14-f179-11ea-8c29-58961d'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/dish/comments:
    get:
      tags:
      - "Dish"
      summary: "Get comments by dish id"
      operationId: "dishComments"
      parameters:
      - name: "id"
        in: query
        required: true
        schema:
          type: string
        example: '0bd11c14-f179-11ea-8c29-58961d'
      - name: "offset"
        in: query
        required: true
        schema:
          type: number
        description: 'Used for fetching more comments'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/dish/tags:
    get:
      tags:
      - "Dish"
      summary: "Get tags of dishes"
      operationId: "DishTags"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "type"
        in: query
        required: true
        schema:
          type: string
          enum:
            - recommend
            - marketing
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/product/info:
    get:
      tags:
      - "Product"
      summary: "Get product info by id"
      operationId: "productInfo"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "id"
        in: query
        required: true
        schema:
          type: string
        example: '00b78074-2a29-11eb-ada1-002b67'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/tool/translate:
    get:
      tags:
      - "Tool"
      summary: "Simple translation utility"
      operationId: "translate"
      parameters:
      - name: "from"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "to"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      - name: "text"
        in: query
        required: true
        schema:
          type: string
        description: 'string to be translated'
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/questionnaire/questions:
    get:
      tags:
      - "Questionnaire"
      summary: "Get questionnaire questions"
      operationId: "questionnaireQuestions"
      parameters:
      - name: "lang"
        in: query
        required: true
        schema:
          type: string
          enum:
            - en-us
            - zh-tw
            - ja
            - ko
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

  /api/questionnaire/answers:
    post:
      tags:
      - "Questionnaire"
      summary: "Post questionnaire answers"
      operationId: "questionnaireAnswers"
      security:
        - bearerAuth: []
      requestBody:
        content:
          application/json:
            schema:
              properties:
                answers:
                  type: array
                  items:
                    description: "Answer ID"
                    type: string
      responses:
        "400":
          description: "Required parameters is not included in request body"
        "200":
          description: "ok"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT

externalDocs:
  description: "Find out more about Swagger"
  url: "http://swagger.io"
